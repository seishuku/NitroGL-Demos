!!ARBfp1.0

OUTPUT Output=result.color;

// Coeffect matrix for diffuse lighting
// (see http://graphics.stanford.edu/papers/envmap/)
PARAM Matrix[12]=
{
	{ 0.045144, 0.043912, -0.086199, 0.043675 },
	{ 0.043912, -0.045144, -0.040201, 0.080327 },
	{ -0.086199, -0.040201, -0.063578, -0.059007 },
	{ 0.043675, 0.080327, -0.059007, 0.526342 },
	{ 0.008650, 0.024621, -0.047511, 0.013858 },
	{ 0.024621, -0.008650, -0.032877, 0.069389 },
	{ -0.047511, -0.032877, -0.052831, -0.040276 },
	{ 0.013858, 0.069389, -0.040276, 0.352995 },
	{ -0.023155, 0.029189, -0.026839, -0.005514 },
	{ 0.029189, 0.023155, -0.045220, 0.090738 },
	{ -0.026839, -0.045220, -0.062362, -0.038880 },
	{ -0.005514, 0.090738, -0.038880, 0.353659 }
};

TEMP Normal, View, Reflect, Diffuse, Color, Temp;

// Vectors and Texture data
TEX View, fragment.texcoord, texture[0], 2D;
TEX Normal, fragment.texcoord, texture[1], 2D;
TEX Color, fragment.texcoord, texture[2], 2D;

// Reflection calculation
DP3 Temp.x, View, Normal;
ADD Temp.w, Temp.x, Temp.x;
MAD Reflect, Temp.w, Normal, -View;

// Sample reflection
TEX Reflect, Reflect, texture[3], CUBE;

// Calculate the diffuse lighting
DP4 Temp.x, Matrix[ 0], Normal;
DP4 Temp.y, Matrix[ 1], Normal;
DP4 Temp.z, Matrix[ 2], Normal;
DP4 Temp.w, Matrix[ 3], Normal;
DP4 Diffuse.x, Normal, Temp;
DP4 Temp.x, Matrix[ 4], Normal;
DP4 Temp.y, Matrix[ 5], Normal;
DP4 Temp.z, Matrix[ 6], Normal;
DP4 Temp.w, Matrix[ 7], Normal;
DP4 Diffuse.y, Normal, Temp;
DP4 Temp.x, Matrix[ 8], Normal;
DP4 Temp.y, Matrix[ 9], Normal;
DP4 Temp.z, Matrix[10], Normal;
DP4 Temp.w, Matrix[11], Normal;
DP4 Diffuse.z, Normal, Temp;

// Cheap fresnel calculation
DP3 Temp.w, View, Normal;
SUB Temp.w, 1.0, Temp.w;
MUL Reflect, Reflect, Temp.w;

// Cheap hack for multiple texture targets
// (2D/Cube, see engine.c line 513, also see MRT.tfp line 42)
MUL Reflect, Reflect, Color.w;
SUB Temp.x, 1.0, Color.w;
ADD_SAT Diffuse, Diffuse, Temp.x;

// Sum up, and output
MAD Output, Color, Diffuse, Reflect;

END
